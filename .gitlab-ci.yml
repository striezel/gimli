docker_image_coverage:
  image: docker:20
  stage: build
  services:
    - docker:20-dind
  script:
    - cd ci/
    - docker build -t $CI_REGISTRY/striezel/gimli/coverage:deb11 . -f Dockerfile_coverage
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push $CI_REGISTRY/striezel/gimli/coverage:deb11
    - docker logout $CI_REGISTRY
  # Only build new image when the Dockerfile or the GitLab CI configuration
  # changes.
  only:
    changes:
      - ci/Dockerfile_coverage
      - .gitlab-ci.yml

coverage:
  image: registry.gitlab.com/striezel/gimli/coverage:deb11
  stage: test
  before_script:
    - apt-get update && apt-get -y upgrade
  script:
    # build
    - export CXX=g++-10
    - export CC=gcc-10
    - mkdir build-coverage
    - cd build-coverage
    - cmake -DCODE_COVERAGE=ON ../
    - make -j4
    # tests
    - ctest -V
    # collect code coverage data
    - lcov -c --directory . --output-file main_coverage.info
    - lcov --remove main_coverage.info '/usr/include/*' '*tests/*' '*third-party/*' -o main_coverage_filtered.info
    - genhtml main_coverage_filtered.info --output-directory ../public
  coverage: /^[\t ]*lines\.*:\s*\d+.\d+\%/
  artifacts:
    name: ${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHA}
    expire_in: 2 days
    paths:
      - public

docker_image_fedora:
  image: docker:20
  stage: build
  services:
    - docker:20-dind
  script:
    - cd ci/
    - docker build -t $CI_REGISTRY/striezel/gimli/fedora:fc35 . -f Dockerfile_fedora
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push $CI_REGISTRY/striezel/gimli/fedora:fc35
    - docker logout $CI_REGISTRY
  # Only build new image when the Dockerfile or the GitLab CI configuration
  # changes.
  only:
    changes:
      - ci/Dockerfile_fedora
      - .gitlab-ci.yml

fedora:
  image: registry.gitlab.com/striezel/gimli/fedora:fc35
  stage: test
  before_script:
    - yum update -y
  script:
    # build
    - export CXX=g++
    - export CC=gcc
    - mkdir build
    - cd build
    - cmake ../
    - make -j4
    # tests
    - ctest -V

docker_image_boost_1_75:
  image: docker:20
  stage: build
  services:
    - docker:20-dind
  script:
    - cd ci/
    - docker build -t $CI_REGISTRY/striezel/gimli/boost_1_75:latest . -f Dockerfile_boost_1_75
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push $CI_REGISTRY/striezel/gimli/boost_1_75:latest
    - docker logout $CI_REGISTRY
  # Only build new image when the Dockerfile or the GitLab CI configuration
  # changes.
  only:
    changes:
      - ci/Dockerfile_boost_1_75
      - .gitlab-ci.yml

boost_1_75:
  image: registry.gitlab.com/striezel/gimli/boost_1_75:latest
  stage: test
  before_script:
    - apk update
  script:
    # build
    - export CXX=g++
    - export CC=gcc
    - mkdir build
    - cd build
    - cmake ../
    - make -j4
    # tests
    - ctest -V

docker_image_boost_1_72:
  image: docker:20
  stage: build
  services:
    - docker:20-dind
  script:
    - cd ci/
    - docker build -t $CI_REGISTRY/striezel/gimli/boost_1_72:latest . -f Dockerfile_boost_1_72
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push $CI_REGISTRY/striezel/gimli/boost_1_72:latest
    - docker logout $CI_REGISTRY
  # Only build new image when the Dockerfile or the GitLab CI configuration
  # changes.
  only:
    changes:
      - ci/Dockerfile_boost_1_72
      - .gitlab-ci.yml

boost_1_72:
  image: registry.gitlab.com/striezel/gimli/boost_1_72:latest
  stage: test
  before_script:
    - apk update
  script:
    # build
    - export CXX=g++
    - export CC=gcc
    - mkdir build
    - cd build
    - cmake ../
    - make -j4
    # tests
    - ctest -V

pages:
  image: debian:11-slim
  stage: deploy
  needs: ["coverage"]
  dependencies:
  - coverage
  script:
    - ls -l
  artifacts:
    paths:
      - public
